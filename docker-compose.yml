services:
    backend-express:
        container_name: gh-trending_backend-express
        build:
            context: ./backend
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./backend:/backend
            - .env:/backend/.env:ro
        command: sh -c 'if [ "${APP_DEV}" = "true" ]; then npm run dev; else npm run prod; fi'
        depends_on:
            postgres:
                condition: service_healthy

    frontend-vite:
        container_name: gh-trending_frontend-vite
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - ${VITE_PORT}:5173
        volumes:
            - ./frontend:/frontend
            - .env:/frontend/.env:ro
        command: sh -c 'if [ "${APP_DEV}" = "true" ]; then rm -rf dist/* && npm run dev; else npm run build; fi'

    nginx:
        container_name: gh-trending_nginx
        image: nginx:alpine
        ports:
            - "${HTTP_PORT}:80"
        restart: unless-stopped
        volumes:
            - ./frontend/dist:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        environment:
            APP_DEV: ${APP_DEV}
        depends_on:
            - backend-express
            - frontend-vite

    postgres:
        image: postgres
        container_name: gh-trending_postgres
        ports:
            - ${DB_PORT}:5432
        restart: unless-stopped
        volumes:
            - ./docker/data/postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}'" ]
            interval: 5s
            timeout: 3s
            retries: 10
